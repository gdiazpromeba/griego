// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.// Jad home page: http://www.kpdus.com/jad.html// Decompiler options: packimports(3) package com.kalos.beans;import java.util.HashMap;import java.util.Map;import com.kalos.enumeraciones.GradoComparacion;import com.kalos.enumeraciones.Idioma;// Referenced classes of package kalos.K://            Rimport com.kalos.enumeraciones.Particularidad;public class AdjetivoBean implements ISignificados{    public AdjetivoBean() {        significados = new HashMap<>();    }    public int getCodigo() {        return codigo;    }    public void setCodigo(int i){        codigo = i;    }    public String getFemenino() {        return femenino;    }    public void setFemenino(String s)  {        femenino = s;    }    public String getId() {        return id;    }    public void setId(String s)  {        id = s;    }    public String getLetra()  {        return letra;    }    public void setLetra(String s)   {        letra = s;    }    public String getMasculino() {        return masculino;    }    public void setMasculino(String s) {        masculino = s;    }    public String getNeutro() {        return neutro;    }    public void setNeutro(String s) {        neutro = s;    }    public int getTipoAdjetivo()  {        return tipoAdjetivo;    }    public void setTipoAdjetivo(int i) {        tipoAdjetivo = i;    }    public Particularidad getParticularidad()    {        return particularidad;    }    public void setParticularidad(Particularidad x) {        particularidad = x;    }    public Map<Idioma, Significado> getSignificados() {        return significados;    }    public void setSignificados(Map<Idioma, Significado> map) {        significados = map;    }    public String getIdTipo()    {        return idTipo;    }    public void setIdTipo(String s)    {        idTipo = s;    }    public boolean isVerbal()    {        return verbal;    }    public void setVerbal(boolean flag)    {        verbal = flag;    }    public String getMascFem()    {        return mascFem;    }    public void setMascFem(String s)    {        mascFem = s;    }    public String getGenitivo()    {        return genitivo;    }    public void setGenitivo(String s)    {        genitivo = s;    }    public GradoComparacion getGrado()    {        return grado;    }    public void setGrado(GradoComparacion i)    {        grado = i;    }    public String primerCampoNoVacio() {        if (masculino!=null){            return masculino;        }else if (mascFem!=null){            return mascFem;        }else if (femenino!=null){            return femenino;        }else if (neutro!=null){            return neutro;        }else{            return null;        }    }    private String id;    private String letra;    private int codigo;    private String masculino;    private String femenino;    private String neutro;    private String mascFem;    private String genitivo;    private int tipoAdjetivo;    private Particularidad particularidad;    private String idTipo;    private Map significados;    private boolean verbal;    private GradoComparacion grado;}