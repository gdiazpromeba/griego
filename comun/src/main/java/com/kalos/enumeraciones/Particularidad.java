// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.// Jad home page: http://www.kpdus.com/jad.html// Decompiler options: packimports(3) package com.kalos.enumeraciones;public enum  Particularidad { 		Regular, Anterior, Atico, Compuestos, Contracto, Dorico, Eolico, Epico, HebreoNT,	Homerico, Jonico, NoAtico, Poetico, Posterior, Raro, Reciente, Sincopado;    public static Particularidad getEnum(String s)    {        if(s.equals("REG"))            return Regular;        if(s.equals("ANT"))            return Anterior;        if(s.equals("ATI"))            return Atico;        if(s.equals("CMP"))            return Compuestos;        if(s.equals("CTR"))            return Contracto;        if(s.equals("DOR"))            return Dorico;        if(s.equals("EOL"))            return Eolico;        if(s.equals("EPI"))            return Epico;        if(s.equals("HNT"))            return HebreoNT;        if(s.equals("HOM"))            return Homerico;        if(s.equals("JON"))            return Jonico;        if(s.equals("NAT"))            return NoAtico;        if(s.equals("POE"))            return Poetico;        if(s.equals("PST"))            return Posterior;        if(s.equals("RAR"))            return Raro;        if(s.equals("REC"))            return Reciente;        if(s.equals("SNC"))            return Sincopado;        if(s.equals("CNT"))            return Contracto;        else            throw new RuntimeException((new StringBuilder()).append("no s\351 qu\351 particularidad es el par\341metro ").append(s).toString());    }    public static String getString(Particularidad x){        switch(x)        {        case Regular: // '\001'            return "REG";        case Anterior: // '\002'            return "ANT";        case Atico: // '\003'            return "ATI";        case Compuestos: // '\004'            return "CMP";        case Contracto: // '\005'            return "CNT";        case Dorico: // '\006'            return "DOR";        case Eolico: // '\007'            return "EOL";        case Epico: // '\b'            return "EPI";        case HebreoNT: // '\t'            return "HNT";        case Homerico: // '\n'            return "HOM";        case Jonico: // '\013'            return "JON";        case NoAtico: // '\f'            return "NAT";        case Poetico: // '\r'            return "POE";        case Posterior: // '\016'            return "PST";        case Raro: // '\017'            return "RAR";        case Reciente: // '\020'            return "REC";        case Sincopado: // '\021'            return "SNC";        }        throw new RuntimeException((new StringBuilder()).append("no s\351 qu\351 particularidad es el par\341metro ").append(x).toString());    }}