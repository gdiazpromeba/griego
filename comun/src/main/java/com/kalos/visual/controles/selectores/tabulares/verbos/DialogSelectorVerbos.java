// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.// Jad home page: http://www.kpdus.com/jad.html// Decompiler options: packimports(3) package com.kalos.visual.controles.selectores.tabulares.verbos;import java.awt.BorderLayout;import java.awt.GridBagLayout;import java.awt.event.ActionEvent;import java.awt.event.ActionListener;import javax.swing.BorderFactory;import javax.swing.JOptionPane;import javax.swing.JTextField;import com.kalos.datos.adaptadores.AdaptadorGerenteVerbos;import com.kalos.datos.gerentes.GerenteVerbos;import com.kalos.enumeraciones.LugarSubcadena;import com.kalos.operaciones.OpPalabras;import com.kalos.recursos.Recursos;import com.kalos.visual.controles.FabricaControles;import com.kalos.visual.controles.botones.BotonBuscar;import com.kalos.visual.controles.combos.ComboLetras;import com.kalos.visual.controles.selectores.jerarquicos.SelectorJerarquicoBeans;import com.kalos.visual.controles.selectores.tabulares.DialogSelectorTabular;import com.kalos.visual.controles.textos.alternable.TextoAlternable;import com.kalos.visual.modelos.VerbosPM;import com.kalos.visual.renderers.FRGenericos;import com.jgoodies.forms.builder.PanelBuilder;import com.jgoodies.forms.layout.CellConstraints;import com.jgoodies.forms.layout.FormLayout;public class DialogSelectorVerbos extends DialogSelectorTabular {    public DialogSelectorVerbos(FabricaControles a, GerenteVerbos p) {	super(new String[] { "letra", "codigo", "verbo", "sufijo", "significado" }, new int[] { 30, 50, 90, 40, 200 },		new String[] {FRGenericos.TEXTO_LATINO, FRGenericos.NUMERO_ENTERO, FRGenericos.TEXTO_LATINO, FRGenericos.TEXTO_LATINO, FRGenericos.TEXTO_LATINO },		new String[] { "letra", "codigo", "verbo", "sufijo_contracto", "significado" });	textoAlternable = new TextoAlternable(false);	butBuscaPorSubcadena = new BotonBuscar();	Y = new ComboLetras();	butBuscaPorLetra = new BotonBuscar();	V = new JTextField(15);	T = a.getSelectorTiposVerbo(true, false, false);	U = p;	setTitle(Recursos.getCadena("verbo"));	panBusqueda.setLayout(new GridBagLayout());	panBusqueda.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));	FormLayout formlayout = new FormLayout(		"right:pref, 3dlu, 30dlu, 120dlu:grow(0.7), 50dlu:grow(0.3), 3dlu, pref ",		"3dlu, 15dlu,   3dlu, 15dlu,   3dlu");	panBusqueda.setLayout(new BorderLayout());	PanelBuilder panelbuilder = new PanelBuilder(formlayout);	panelbuilder.setDefaultDialogBorder();	CellConstraints cellconstraints = new CellConstraints();	panelbuilder.addLabel(Recursos.getCadena("por_subcadena"), cellconstraints.xy(1, 2));	panelbuilder.add(textoAlternable, cellconstraints.xyw(3, 2, 3));	panelbuilder.add(butBuscaPorSubcadena, cellconstraints.xy(7, 2));	panelbuilder.addLabel(Recursos.getCadena("por_letra_inicial"), cellconstraints.xy(1, 4));	panelbuilder.add(Y, cellconstraints.xy(3, 4));	panelbuilder.add(butBuscaPorLetra, cellconstraints.xy(7, 4));	panBusqueda.add(panelbuilder.getPanel());	butBuscaPorLetra.addActionListener(new ActionListener() {	    public void actionPerformed(ActionEvent actionevent) {		buscaPorLetra(Y.getLetraSeleccionadaBeta());	    }	});	butBuscaPorSubcadena.addActionListener(new ActionListener() {	    public void actionPerformed(ActionEvent actionevent) {		String s = textoAlternable.getCadenaCompleta();		s = OpPalabras.strCompletoABeta(s);		A(s, LugarSubcadena.Principio);	    }	});    }    protected void buscaPorLetra(String letra) {	preparaColumnas();	AdaptadorGerenteVerbos g = new AdaptadorGerenteVerbos(U);	g.seleccionPorLetraInicial(letra);	pagingModel = new VerbosPM(g, 100);	tabla.setModel(pagingModel);	tablemodelATabla();    }    protected void A(String subcadena, LugarSubcadena h) {	preparaColumnas();	AdaptadorGerenteVerbos g = new AdaptadorGerenteVerbos(U);	g.seleccionPorSubcadenaVerbo(subcadena, h);	pagingModel = new VerbosPM(g, 100);	tablemodelATabla();    }    public void fonts() {    }    public void limpieza() {    }    public void llenaCampos() {    }    public void mensajeVacio() {	JOptionPane		.showMessageDialog(this, Recursos.getCadena("no_puede_ser_vacio"), Recursos.getCadena("busqueda"), 0);    }    TextoAlternable textoAlternable;    BotonBuscar butBuscaPorSubcadena;    ComboLetras Y;    BotonBuscar butBuscaPorLetra;    JTextField V;    SelectorJerarquicoBeans T;    private GerenteVerbos U;}