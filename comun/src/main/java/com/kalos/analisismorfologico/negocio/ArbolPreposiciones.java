package com.kalos.analisismorfologico.negocio;import java.io.PrintStream;import java.util.ArrayList;import java.util.Enumeration;import java.util.List;import javax.swing.tree.DefaultMutableTreeNode;import javax.swing.tree.DefaultTreeModel;@SuppressWarnings("serial")public class ArbolPreposiciones extends DefaultTreeModel {    public ArbolPreposiciones(Object paramObject) {	super(new DefaultMutableTreeNode(paramObject));    }    public Object[] getHojasMasProfundas() {	DefaultMutableTreeNode localDefaultMutableTreeNode1 = (DefaultMutableTreeNode) getRoot();	Enumeration localEnumeration = localDefaultMutableTreeNode1.depthFirstEnumeration();	int i = 0;	ArrayList localArrayList = new ArrayList();	while (localEnumeration.hasMoreElements()) {	    DefaultMutableTreeNode localDefaultMutableTreeNode2 = (DefaultMutableTreeNode) localEnumeration		    .nextElement();	    if (localDefaultMutableTreeNode2.getLevel() >= i) {		localArrayList.add(localDefaultMutableTreeNode2.getUserObject());		i = localDefaultMutableTreeNode2.getLevel();	    }	}	return localArrayList.toArray();    }    public Object[] getHojasDelNivel(int paramInt) {	DefaultMutableTreeNode localDefaultMutableTreeNode1 = (DefaultMutableTreeNode) getRoot();	Enumeration localEnumeration = localDefaultMutableTreeNode1.depthFirstEnumeration();	ArrayList localArrayList = new ArrayList();	while (localEnumeration.hasMoreElements()) {	    DefaultMutableTreeNode localDefaultMutableTreeNode2 = (DefaultMutableTreeNode) localEnumeration		    .nextElement();	    if (localDefaultMutableTreeNode2.getLevel() == paramInt) {		localArrayList.add(localDefaultMutableTreeNode2.getUserObject());	    }	}	return localArrayList.toArray();    }    public Object[] getTodoMenosRaiz() {	DefaultMutableTreeNode localDefaultMutableTreeNode1 = (DefaultMutableTreeNode) getRoot();	Enumeration localEnumeration = localDefaultMutableTreeNode1.breadthFirstEnumeration();	ArrayList localArrayList = new ArrayList();	if (localEnumeration.hasMoreElements()) {	    localEnumeration.nextElement();	}	while (localEnumeration.hasMoreElements()) {	    DefaultMutableTreeNode localDefaultMutableTreeNode2 = (DefaultMutableTreeNode) localEnumeration		    .nextElement();	    localArrayList.add(localDefaultMutableTreeNode2.getUserObject());	}	return localArrayList.toArray();    }    public Object[] getHojas() {	DefaultMutableTreeNode localDefaultMutableTreeNode1 = (DefaultMutableTreeNode) getRoot();	Enumeration localEnumeration = localDefaultMutableTreeNode1.depthFirstEnumeration();	ArrayList localArrayList = new ArrayList();	while (localEnumeration.hasMoreElements()) {	    DefaultMutableTreeNode localDefaultMutableTreeNode2 = (DefaultMutableTreeNode) localEnumeration		    .nextElement();	    if (localDefaultMutableTreeNode2.isLeaf()) {		localArrayList.add(localDefaultMutableTreeNode2.getUserObject());	    }	}	return localArrayList.toArray();    }    public Object[] getTodosLosNodos() {	DefaultMutableTreeNode localDefaultMutableTreeNode1 = (DefaultMutableTreeNode) getRoot();	Enumeration localEnumeration = localDefaultMutableTreeNode1.depthFirstEnumeration();	ArrayList localArrayList = new ArrayList();	while (localEnumeration.hasMoreElements()) {	    DefaultMutableTreeNode localDefaultMutableTreeNode2 = (DefaultMutableTreeNode) localEnumeration		    .nextElement();	    localArrayList.add(localDefaultMutableTreeNode2.getUserObject());	}	return localArrayList.toArray();    }    private DefaultMutableTreeNode A(Object paramObject) {	DefaultMutableTreeNode localDefaultMutableTreeNode1 = (DefaultMutableTreeNode) getRoot();	Enumeration localEnumeration = localDefaultMutableTreeNode1.depthFirstEnumeration();	while (localEnumeration.hasMoreElements()) {	    DefaultMutableTreeNode localDefaultMutableTreeNode2 = (DefaultMutableTreeNode) localEnumeration		    .nextElement();	    if (localDefaultMutableTreeNode2.getUserObject().equals(paramObject)) {		return localDefaultMutableTreeNode2;	    }	}	return null;    }    public void agregaHijo(Object paramObject1, Object paramObject2) {	DefaultMutableTreeNode localDefaultMutableTreeNode1 = A(paramObject1);	DefaultMutableTreeNode localDefaultMutableTreeNode2 = new DefaultMutableTreeNode(paramObject2);	localDefaultMutableTreeNode1.add(localDefaultMutableTreeNode2);    }    public void debug() {	DefaultMutableTreeNode localDefaultMutableTreeNode1 = (DefaultMutableTreeNode) getRoot();	Enumeration localEnumeration = localDefaultMutableTreeNode1.breadthFirstEnumeration();	while (localEnumeration.hasMoreElements()) {	    DefaultMutableTreeNode localDefaultMutableTreeNode2 = (DefaultMutableTreeNode) localEnumeration		    .nextElement();	    for (int i = 0; i < localDefaultMutableTreeNode2.getLevel(); i++) {		System.out.print("\t");	    }	    System.out.println(localDefaultMutableTreeNode2.toString());	}    }}