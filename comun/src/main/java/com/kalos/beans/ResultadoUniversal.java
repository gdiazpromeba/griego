package com.kalos.beans;import java.util.ArrayList;import java.util.List;import com.kalos.enumeraciones.Aspecto;import com.kalos.enumeraciones.Caso;import com.kalos.enumeraciones.FuerteDebil;import com.kalos.enumeraciones.Genero;import com.kalos.enumeraciones.GradoComparacion;import com.kalos.enumeraciones.Modo;import com.kalos.enumeraciones.Numero;import com.kalos.enumeraciones.Particularidad;import com.kalos.enumeraciones.Persona;import com.kalos.enumeraciones.Tiempo;import com.kalos.enumeraciones.TipoPalabra;import com.kalos.enumeraciones.Voz;import org.apache.log4j.Logger;public class ResultadoUniversal {    Logger log = Logger.getLogger(getClass().getName());    private TipoPalabra tipoPalabra;    private String id;    private String significado;    private Particularidad particCanonica;    private Particularidad particIrr;    private Voz voz;    private String formaAccidentada;    private Tiempo tiempo;    private Aspecto aspecto;    private FuerteDebil fuerteDebil;    private Persona persona;    private Caso caso;    private Genero genero;    private Numero numero;    private Modo modo;    private GradoComparacion grado;    private String formaCanonica;    private List<String> preposiciones;    private String idCompuesto;    private String idEncabezado;    Integer hashCode;    public String getIdSimpleOCompuesto() {        if (this.idCompuesto == null) {            return this.id;        }        return this.idCompuesto;    }    public ResultadoUniversal() {    }        public ResultadoUniversal(TipoPalabra tipoPalabra, String id, String significado, Particularidad particCanonica, Particularidad particIrr, Voz voz,            String formaAccidentada, Tiempo tiempo, Aspecto aspecto, FuerteDebil fuerteDebil, Persona persona, Caso caso, Genero genero,            Numero numero, Modo modo, GradoComparacion grado, String formaCanonica, List<String> preposiciones, String idCompuesto) {        this.tipoPalabra = tipoPalabra;        this.id = id;        this.significado = significado;        this.particCanonica = particCanonica;        this.particIrr = particIrr;        this.voz = voz;        this.formaAccidentada = formaAccidentada;        this.tiempo = tiempo;        this.aspecto = aspecto;        this.fuerteDebil = fuerteDebil;        this.persona = persona;        this.caso = caso;        this.genero = genero;        this.numero = numero;        this.modo = modo;        this.grado = grado;        this.formaCanonica = formaCanonica;        this.preposiciones = preposiciones;        this.idCompuesto = idCompuesto;        this.hashCode = hashCode();    }       public ResultadoUniversal(TipoPalabra tipoPalabra, String id, String significado, Particularidad particCanonica, Particularidad particIrr, Voz voz,            String formaAccidentada, Tiempo tiempo, Aspecto aspecto, FuerteDebil fuerteDebil, Persona persona, Caso caso, Genero genero,            Numero numero, Modo modo, GradoComparacion grado, String formaCanonica, List<String> preposiciones, String idCompuesto, String idEncabezado) {        this.tipoPalabra = tipoPalabra;        this.id = id;        this.significado = significado;        this.particCanonica = particCanonica;        this.particIrr = particIrr;        this.voz = voz;        this.formaAccidentada = formaAccidentada;        this.tiempo = tiempo;        this.aspecto = aspecto;        this.fuerteDebil = fuerteDebil;        this.persona = persona;        this.caso = caso;        this.genero = genero;        this.numero = numero;        this.modo = modo;        this.grado = grado;        this.formaCanonica = formaCanonica;        this.preposiciones = preposiciones;        this.idCompuesto = idCompuesto;        this.idEncabezado = idEncabezado;        this.hashCode = hashCode();    }    public boolean equals(Object obj) {        if ((obj instanceof ResultadoUniversal)) {            ResultadoUniversal reu = (ResultadoUniversal) obj;            return reu.cadena().equals(cadena());        }        return false;    }    public int hashCode() {        if (this.hashCode == null) {            this.hashCode = cadena().hashCode();        }        return this.hashCode.intValue();    }    private String cadena() {        StringBuffer sb = new StringBuffer(100);        sb.append(this.tipoPalabra);        sb.append("|");        sb.append(this.id);        sb.append("|");        sb.append(this.significado);        sb.append("|");        sb.append(this.particCanonica);        sb.append("|");        sb.append(this.particIrr);        sb.append("|");        sb.append(this.voz);        sb.append("|");        sb.append(this.formaAccidentada);        sb.append("|");        sb.append(this.tiempo);        sb.append("|");        sb.append(this.aspecto);        sb.append("|");        sb.append(this.fuerteDebil);        sb.append("|");        sb.append(this.persona);        sb.append("|");        sb.append(this.caso);        sb.append("|");        sb.append(this.genero);        sb.append("|");        sb.append(this.numero);        sb.append("|");        sb.append(this.modo);        sb.append("|");        sb.append(this.grado);        sb.append("|");        sb.append(this.formaCanonica);        sb.append("|");        if (this.preposiciones != null) {            sb.append(this.preposiciones.toString());            sb.append("|");        }        if (this.idEncabezado!=null){            sb.append(this.idEncabezado);            sb.append("|");        }        return sb.toString();    }    public Aspecto getAspecto() {        return this.aspecto;    }    public void setAspecto(Aspecto paramk) {        this.aspecto = paramk;        this.hashCode = null;    }    public Caso getCaso() {        return this.caso;    }    public void setCaso(Caso parama) {        this.caso = parama;        this.hashCode = null;    }    public String getFormaAccidentada() {        return this.formaAccidentada;    }    public void setFormaAccidentada(String paramString) {        this.formaAccidentada = paramString;        this.hashCode = null;    }    public String getFormaCanonica() {        return this.formaCanonica;    }    public void setFormaCanonica(String paramString) {        this.formaCanonica = paramString;        this.hashCode = null;    }    public FuerteDebil getFuerte() {        return this.fuerteDebil;    }    public void setFuerte(FuerteDebil paramP) {        this.fuerteDebil = paramP;        this.hashCode = null;    }    public Genero getGenero() {        return this.genero;    }    public void setGenero(Genero paramA) {        this.genero = paramA;        this.hashCode = null;    }    public String getId() {        return this.id;    }    public void setId(String paramString) {        this.id = paramString;        this.hashCode = null;    }    public Modo getModo() {        return this.modo;    }    public void setModo(Modo paramp) {        this.modo = paramp;        this.hashCode = null;    }    public void setGrado(GradoComparacion parami) {        this.grado = parami;        this.hashCode = null;    }    public Numero getNumero() {        return this.numero;    }    public void setNumero(Numero paramn) {        this.numero = paramn;        this.hashCode = null;    }    public Particularidad getParticCanonica() {        return this.particCanonica;    }    public Particularidad getParticularidad() {        if (this.particIrr != null) {            return this.particIrr;        }        return this.particCanonica;    }    public void setParticCanonica(Particularidad paramX) {        this.particCanonica = paramX;        this.hashCode = null;    }    public Particularidad getParticIrr() {        return this.particIrr;    }    public void setParticIrr(Particularidad paramX) {        this.particIrr = paramX;        this.hashCode = null;    }    public Persona getPersona() {        return this.persona;    }    public void setPersona(Persona param_) {        this.persona = param_;        this.hashCode = null;    }    public List<String> getPreposiciones() {        return this.preposiciones;    }    public void setPreposiciones(List<String> paramList) {        this.preposiciones = paramList;        this.hashCode = null;    }    public String getSignificado() {        return this.significado;    }    public void setSignificado(String paramString) {        this.significado = paramString;        this.hashCode = null;    }    public Tiempo getTiempo() {        return this.tiempo;    }    public void setTiempo(Tiempo paramj) {        this.tiempo = paramj;        this.hashCode = null;    }    public TipoPalabra getTipoPalabra() {        return this.tipoPalabra;    }    public void setTipoPalabra(TipoPalabra paraml) {        this.tipoPalabra = paraml;        this.hashCode = null;    }    public Voz getVoz() {        return this.voz;    }    public void setVoz(Voz paramZ) {        this.voz = paramZ;        this.hashCode = null;    }    public GradoComparacion getGrado() {        return this.grado;    }    public String getIdCompuesto() {        return this.idCompuesto;    }    public void setIdCompuesto(String paramString) {        this.idCompuesto = paramString;    }        public ResultadoUniversal clona(){        ResultadoUniversal n= new ResultadoUniversal();        n.setAspecto(aspecto);        n.setCaso(caso);        n.setFormaAccidentada(formaAccidentada);        n.setFormaCanonica(formaCanonica);        n.setFuerte(fuerteDebil);        n.setGenero(genero);        n.setGrado(grado);        n.setId(id);        n.setIdCompuesto(idCompuesto);        n.setModo(modo);        n.setNumero(numero);        n.setParticCanonica(particCanonica);        n.setParticIrr(particIrr);        n.setPersona(persona);        if (this.getPreposiciones()!=null){          List<String> newPreps = new ArrayList<>();          for (String prep : this.getPreposiciones()) {            newPreps.add(prep);          }          n.setPreposiciones(newPreps);        }        n.setSignificado(significado);        n.setTiempo(tiempo);        n.setTipoPalabra(tipoPalabra);        n.setVoz(voz);        return n;                    }        public String getIdEncabezado() {        return idEncabezado;    }        public void setIdEncabezado(String idEncabezado) {        this.idEncabezado = idEncabezado;        this.hashCode = null;    }}