package com.kalos.flexion.conjugacion.negocio;import java.util.ArrayList;import java.util.Iterator;import java.util.List;import com.kalos.beans.DesinInfinitivo;import com.kalos.datos.gerentes.GerenteDesinInfinitivos;import com.kalos.enumeraciones.Acento;import com.kalos.enumeraciones.Aspecto;import com.kalos.enumeraciones.FuerteDebil;import com.kalos.enumeraciones.Voz;import com.kalos.operaciones.OpPalabras;public class ManejaDesinenciasInfinitivo {    @SuppressWarnings("unchecked")    private List<Desinencia>[][][][] desinencias = new List[7][4][6][2];    public Desinencia[] getDesinencias(int juego, Voz voz, Aspecto aspecto, FuerteDebil fuerte) {	int i = voz.valorEntero();	int j = aspecto.valorEntero();	int k = fuerte.valorEntero();	List<Desinencia> localList = this.desinencias[juego][i][j][k];	if (localList == null) {	    return null;	}	try {	    return (Desinencia[]) localList.toArray(new Desinencia[0]);	} catch (Exception localException) {	    System.out.println("error al tratar de obtener la desinencia ***********");	    System.out.println("juego=" + juego);	    System.out.println("voz=" + voz);	    System.out.println("aspecto=" + aspecto);	    System.out.println("fuerte=" + fuerte);	    System.out.println("***************************************************");	    throw new RuntimeException("error en ManejaDesinenciasInfinitivo.getDesinencias()");	}    }    private void puebla(int juego, Voz voz, Aspecto aspecto, FuerteDebil fuerte, String cadena, int posicion, Acento acento) {	int i = voz.valorEntero();	int j = aspecto.valorEntero();	int k = fuerte.valorEntero();	try {	    if (this.desinencias[juego][i][j][k] == null) {		this.desinencias[juego][i][j][k] = new ArrayList<Desinencia>();	    }	    this.desinencias[juego][i][j][k].add(new Desinencia(cadena, posicion, acento, juego));	} catch (Exception localException) {	    System.out.println("error al tratar de obtener la desinencia ***********");	    System.out.println("juego=" + juego);	    System.out.println("voz=" + voz);	    System.out.println("aspecto=" + aspecto);	    System.out.println("fuerte=" + fuerte);	    System.out.println("***************************************************");	    throw new RuntimeException("error en ManejaDesinenciasInfinitivo.setDesinencias()");	}    }    public ManejaDesinenciasInfinitivo(boolean todas, GerenteDesinInfinitivos gerDesInfinitivos) {	List<DesinInfinitivo> localList;	if (!todas) {	    localList = gerDesInfinitivos.seleccionaRestringidas();	} else {	    localList = gerDesInfinitivos.seleccionaTodas();	}	Iterator<DesinInfinitivo> localIterator = localList.iterator();	while (localIterator.hasNext()) {	    DesinInfinitivo locald = localIterator.next();	    puebla(locald.getJuego(), locald.getVoz(), locald.getAspecto(), locald.getFuerte(),		    OpPalabras.strBetaACompleto(locald.getDesinencia()), locald.getSilaba(), locald.getAcento());	}    }}