<?xml version="1.0" encoding="ISO-8859-1"?>

<!-- prepara un setup. Este build asume que común e iu han sido ejecutados, y que archivos jar compilados ya existen
en los respectivos directorios "target" -->
<project name="setup" basedir="." default="run" xmlns:artifact="antlib:org.apache.maven.artifact.ant">
	
   <path id="maven-ant-tasks.classpath" path="lib/maven-ant-tasks-2.1.3.jar" />
   <typedef resource="org/apache/maven/artifact/ant/antlib.xml"  uri="antlib:org.apache.maven.artifact.ant" classpathref="maven-ant-tasks.classpath" />	

	<property name="jar.comun" value="comun-1.0-SNAPSHOT.jar"/>
	<property name="jar.comun.swing" value="comun-swing-1.0-SNAPSHOT.jar"/>
	<property name="jar.iu" value="iu-1.0-SNAPSHOT.jar"/>
	<property name="version" value="4.16"/>
	<property name="nombre" value="kalos-${version}"/>
	<property name="jar.kalos" value="${nombre}.jar"/>
	<property name="jar.kalos.ofuscado" value="kalos-ofuscado-4.16.jar"/>
	<property name="jar.iu.work" value="work/${jar.iu}"/>
	<property name="shrinklog" value="shrink.log"/>
	<property environment="env"/>
	
	<target name="copiaDeps">
	  <artifact:mvn pom="../iu/pom.xml" mavenHome="${env.M2_HOME}" fork="true">
	    <arg value="dependency:copy-dependencies"/>
	  </artifact:mvn>
	  <delete dir="work/lib"/>
	  <mkdir dir="work/lib"/>
	  <copy todir="work/lib">
	    <fileset dir="../iu/target/dependency"/>
	  </copy>
	  <delete file="work/lib/${jar.comun}"/>
	  <delete file="work/lib/${jar.comun.swing}"/>
    </target>
	
	<target name="compilacion" depends="copiaDeps">
		
		<path id="libs.for.comun">
			<fileset dir="work/lib/">
				<include name="*.jar"/>
			</fileset>
		</path>
		
		
		<echo>Compilando todo ... </echo>
		<delete dir="work/comp"/>
		<mkdir dir="work/comp"/>
		<mkdir dir="work/comp/src"/>
		<mkdir dir="work/comp/out"/>

		
		
		<copy todir="work/comp/src">
			<fileset dir="../comun/src/main/java"/>
			<fileset dir="../comun-swing/src/main/java"/>
			<fileset dir="../iu/src/main/java"/>
		</copy>
		
		<javac encoding="UTF-8" debug="true" srcdir="work/comp/src" destdir="work/comp/out" classpathref="libs.for.comun"/>
		
		

	</target>	

	<target name="run">
		<java jar="work/condb/${jar.kalos.ofuscado}" dir="work/condb" fork="true">
		</java>
	</target>
	
	<target name="runBuild" depends="compilacion, granJar, conBDYReportes" >
		<java jar="work/condb/${jar.kalos}" dir="work/condb" fork="true">
			  <jvmarg value="-Xdebug" />
		</java>
	</target>	
	
	<target name="runOfuscado">
		<java jar="work/condb/${jar.kalos.ofuscado}" dir="work/condb" fork="true">
		</java>
	</target>
	
	<target name="buildOfuscado" depends="compilacion, granJar, conBDYReportes, obfuscate" />
	


	
	<target name="obfuscate" >
		        <delete dir="work/tmp"/>
		        <mkdir dir="work/tmp"/>

	            <property name="obfuscate.absolute.dir" location="work/tmp" />

	             <!-- input for dex will be proguard's output -->
	            <property name="out.dex.input.absolute.dir" value="${obfuscated.jar.file}" />

	            <!-- Add Proguard Tasks -->
	            <property name="proguard.jar" location="${android.tools.dir}/proguard/lib/proguard.jar" />
	            <taskdef name="proguard" classname="proguard.ant.ProGuardTask" classpath="lib/proguard.jar" />
		
			    <!-- don't obfuscate this method -->
	



	            <proguard>
				    <keep name="com.kalos.iu.Comienzo">
				      <method name="main"/>
				    </keep>	
	            	
	            	
	                @proguard.config
	                -injars "work/condb/${jar.kalos}"
	                -outjars "work/condb/${jar.kalos.ofuscado}"
	                -libraryjars "work/condb/lib/"
	                -dump ${obfuscate.absolute.dir}/dump.txt
	                -printseeds work/tmp/seeds.txt
	                -printusage work/tmp/usage.txt
	                -printmapping work/tmp/mapping.txt
	            </proguard>

	</target>	
	
	<target name="granJar" >
		<manifestclasspath property="lib.list.iu" jarfile="${jar.iu.work}">
			<classpath refid="libs.for.iu" />
		</manifestclasspath>		
		<delete dir="work/comp/jar"/>
		<mkdir dir="work/comp/jar"/>
		  <echoproperties>
		    <propertyset>
		      <propertyref prefix="lib.list"/>
		    </propertyset>
		  </echoproperties>
		<!-- crea un directorio temporario para los recursos, algunos de los cuales tengo que editar -->
		<delete dir="work/comp/rec"/>
		<mkdir dir="work/comp/rec"/>
		<copy todir="work/comp/rec">
		  <fileset dir="../comun/src/main/resources">
		    <!-- el log4j.xml que va a quedar es el de iu, no el de común -->
		  	<exclude name="../comun/src/main/resources/log4j.xml"/>
		  </fileset>
		  <fileset dir="../iu/src/main/resources"/>
		</copy>
		<jar destfile="work/comp/jar/${jar.kalos}">
			<fileset dir="work/comp/out"/>
			<fileset dir="work/comp/rec"/>
			<manifest>
				<attribute name="Class-Path" value="${lib.list.iu}" />
				<attribute name="Created-By" value="${user.name}" />
				<attribute name="Main-Class" value="com.kalos.iu.Comienzo" />
			</manifest>
		</jar>		
	</target>


	<path id="libs.for.iu">
		<fileset dir="work/lib/">
			<include name="*.jar"/>
		</fileset>
	</path>




	
	<target name="conBDYReportes">
      <echo>Creando una versión con base de datos</echo>
	  <delete dir="work/condb"/>
	  <mkdir dir="work/tmp/condb/"/>
	  <mkdir dir="work/tmp/condb/data"/>		
	  <copy todir="work/condb/data">
	    <fileset dir="../datos/data"/>
	  </copy>		
	  <copy file="../datos/db.conf" toDir="work/condb"/>
	  <copy file="work/comp/jar/${jar.kalos}" toDir="work/condb"/>	
	  <copy todir="work/condb/lib">
	    <fileset dir="work/lib"/>
	  </copy>
	  <echo>Copiando el kalos.properties y editándolo</echo>	
      <copy file="kalos.properties-win" tofile="work/condb/kalos.properties"/> 		
	  <replace file="work/condb/kalos.properties">
	  	<replacefilter token="debug=true" value="debug=false"/>
	  	<replacefilter token="NUMERO_DE_VERSION" value="${version}"/>
      </replace>
	  <echo>Copiando los archivos de reportes</echo>
	  <delete dir="work/condb/armado_reportes"/>
	  <mkdir dir="work/condb/armado_reportes"/>
	  <copy todir="work/condb/armado_reportes">
	    <fileset dir="../iu/armado_reportes"/>
	  </copy>	
	 
	</target>
	
	<taskdef name="jarbundler"  classname="net.sourceforge.jarbundler.JarBundler" classpath="lib/jarbundler-2.3.1.jar" />
	
	  <fileset id="libs.en.condb" dir="work/condb/lib">
	    <include name="*.jar"/>
	  </fileset>  

	
    <taskdef name="bundleapp" classname="com.oracle.appbundler.AppBundlerTask"   classpath="lib/appbundler-1.0.jar" />

    <target name="bundleMac">
  	  <echo>Creando una versión Mac</echo>
      <delete dir="work/bundlemac"/>
  	  <mkdir dir="work/bundlemac/"/>
      <mkdir dir="work/bundlemac/temp"/>
      <copy file="kalos.properties-mac" tofile="work/bundlemac/temp/kalos.properties"/> 
  	  <replace file="work/bundlemac/temp/kalos.properties">
  	  	<replacefilter token="debug=true" value="debug=false"/>
  	  	<replacefilter token="NUMERO_DE_VERSION" value="${version}"/>
      </replace>   	
      <bundleapp outputdirectory="work/bundlemac" name="${nombre}"
            displayname="${nombre}"
            identifier="components.${nombre}"
            mainclassname="com.kalos.iu.Comienzo">
      	    <runtime dir="${env.JAVA_HOME}" />
        	<classpath file="work/condb/${jar.kalos.ofuscado}"/>
      	    <!-- <classpath refid="libs.en.condb"/> -->
      	    <classpath file="work/bundlemac/temp/kalos.properties"/>
      </bundleapp>
      <delete dir="work/bundlemac/temp"/> 
      <!-- agregar el resto de los directorios y archivos a la sección "Java" -->
      <mkdir dir="work/bundlemac/${nombre}.app/Contents/Java/data"/>	
  	  <copy todir="work/bundlemac/${nombre}.app/Contents/Java/data">
  	    <fileset dir="work/condb/data"/>
  	  </copy>  
      <mkdir dir="work/bundlemac/${nombre}.app/Contents/Java/lib"/>    	
      <copy todir="work/bundlemac/${nombre}.app/Contents/Java/lib">
    	    <fileset dir="work/condb/lib"/>
      </copy>      	
  	  <mkdir dir="work/bundlemac/${nombre}.app/Contents/Java/armado_reportes"/>
  	  <copy todir="work/bundlemac/${nombre}.app/Contents/Java/armado_reportes">
  	    <fileset dir="work/condb/armado_reportes"/>
  	  </copy>   
      <copy file="work/condb/kalos.properties" toDir="work/bundlemac/${nombre}.app/Contents/Java"/>
      <copy file="work/condb/db.conf" toDir="work/bundlemac/${nombre}.app/Contents/Java"/>  
      <!-- agregar el ícono -->
      <copy file="icono_kalos.icns" toDir="work/bundlemac/${nombre}.app/Contents/Resources"/> 
  	  <replace file="work/bundlemac/${nombre}.app/Contents/Info.plist">
          <replacetoken>GenericApp.icns</replacetoken>
          <replacevalue>icono_kalos.icns</replacevalue>
      </replace>  
   </target>
	
    <target name="bundleWin">
  	  <echo>Creando una versión Mac</echo>
      <delete dir="work/bundlewin"/>
  	  <mkdir dir="work/bundlewin/"/>
      <copy file="kalos.properties-win" tofile="work/bundlewin/kalos.properties"/> 
  	  <!-- archivo de propiedades -->
      <replace file="work/bundlewin/kalos.properties">
  	  	<replacefilter token="debug=true" value="debug=false"/>
  	  	<replacefilter token="NUMERO_DE_VERSION" value="${version}"/>
      </replace>   	 
      <!-- agregar el resto de los directorios y archivos a la sección "Java" -->	
      <mkdir dir="work/bundlewin/data" />
      <mkdir dir="work/bundlewin/lib" />
      <mkdir dir="work/bundlewin/armado_reportes" />
  	  <copy todir="work/bundlewin/data">
  	    <fileset dir="work/condb/data"/>
  	  </copy>
      <copy todir="work/bundlewin/lib">
        <fileset dir="work/condb/lib"/>
      </copy>    	
      <copy todir="work/bundlewin/armado_reportes">
        <fileset dir="work/condb/armado_reportes"/>
      </copy>    	
      <!-- archivo iss -->
      <replace file="work/bundlewin/kalos.properties">
        <replacefilter token="debug=true" value="debug=false"/>
    	<replacefilter token="NUMERO_DE_VERSION" value="${version}"/>
      </replace>     	
      <copy file="kalos.exe" todir="work/bundlewin"/>
   </target>	

</project>