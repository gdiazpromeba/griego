package kalos.flexion;import javax.swing.table.DefaultTableModel;import kalos.enumeraciones.Reportes;import kalos.enumeraciones.TipoPalabra;public class CreadorTableModelsReporte {    private UtilidadesTM utilidadesTM;    private CreadorTableModelsBasicos creadorTablemodelsBasicos;    public DefaultTableModel getTMReporte(String paramString, Reportes reporte)  {    DefaultTableModel localDefaultTableModel;    switch (reporte)    {    case VERBOS_POR_MODO:       localDefaultTableModel = this.creadorTablemodelsBasicos.getVerbosCompleto(paramString, false);      break;    case VERBOS_POR_MODO_SIN_DUAL:       localDefaultTableModel = this.creadorTablemodelsBasicos.getVerbosCompleto(paramString, true);      break;    case VERBOS_POR_MODO_ABREVIADO:       localDefaultTableModel = this.creadorTablemodelsBasicos.getVerbosCompacto(paramString);      break;    case VERBOS_POR_VOZ:       localDefaultTableModel = this.creadorTablemodelsBasicos.getVerbosCompletoVozPrimero(paramString, false);      break;    case VERBOS_POR_VOZ_SIN_DUAL:       localDefaultTableModel = this.creadorTablemodelsBasicos.getVerbosCompletoVozPrimero(paramString, true);      break;    case INFINITIVOS_POR_VOZ:       localDefaultTableModel = this.creadorTablemodelsBasicos.getInfinitivos(paramString);      break;    case PARTICIPIOS_POR_CASO_ABREVIADO:       localDefaultTableModel = this.creadorTablemodelsBasicos.getParticipiosCompacto(paramString);      break;    case PARTICIPIOS_POR_VOZ:       localDefaultTableModel = this.creadorTablemodelsBasicos.getParticipiosCompactoVozPrimero(paramString);      break;    case PARTICIPIOS_POR_NUMERO:       localDefaultTableModel = this.creadorTablemodelsBasicos.getParticipiosCompleto(paramString, false);      break;    case PARTICIPIOS_POR_VOZ_SIN_DUAL:       localDefaultTableModel = this.creadorTablemodelsBasicos.getParticipiosCompletoVozPrimero(paramString, false, false);      break;    case PARTICIPIOS_POR_NUMERO_SIN_DUAL:       localDefaultTableModel = this.creadorTablemodelsBasicos.getParticipiosCompletoSinDuales(paramString, false);      break;    case PARTICIPIOS_POR_VOZ_SIN_VOCATIVO:       localDefaultTableModel = this.creadorTablemodelsBasicos.getParticipiosCompletoVozPrimero(paramString, false, true);      break;    case PARTICIPIOS_POR_VOZ_ABREVIADO:       localDefaultTableModel = this.creadorTablemodelsBasicos.getParticipiosCompleto(paramString, true);      break;    case PARTICIPIOS_POR_NUMERO_SIN_VOCATIVO:       localDefaultTableModel = this.creadorTablemodelsBasicos.getParticipiosCompletoVozPrimero(paramString, true, false);      break;    case SUSTANTIVOS_POR_NUMERO:       localDefaultTableModel = this.creadorTablemodelsBasicos.getSustantivosPorNumero(paramString, true);      break;    case SUSTANTIVOS_POR_NUMERO_SIN_DUAL:       localDefaultTableModel = this.creadorTablemodelsBasicos.getSustantivosPorNumero(paramString, false);      break;    case ADJETIVOS_POR_GENERO:       localDefaultTableModel = this.creadorTablemodelsBasicos.getAdjetivosPorGenero(paramString);      break;    case ADJETIVOS_POR_NUMERO:       localDefaultTableModel = this.creadorTablemodelsBasicos.getAdjetivosPorNumero(paramString, true);      break;    case ADJETIVOS_POR_NUMERO_SIN_DUAL:       localDefaultTableModel = this.creadorTablemodelsBasicos.getAdjetivosPorNumero(paramString, false);      break;    case ARTICULOS_POR_GENERO:       localDefaultTableModel = this.creadorTablemodelsBasicos.getParticulasPorTipo(TipoPalabra.Articulo);      this.utilidadesTM.columnasAInterfaz(localDefaultTableModel, new String[] { "MASCULINO", "FEMENINO", "NEUTRO" });      break;    case PRONOMBRES_PERSONALES_POR_CASO:       localDefaultTableModel = this.creadorTablemodelsBasicos.getPronombresPersonalesPorCaso(true);      this.utilidadesTM.columnasAInterfaz(localDefaultTableModel, new String[] { "NOMINATIVO", "ACUSATIVO", "GENITIVO", "DATIVO" });      break;    case PRONOMBRES_PERSONALES_POR_CASO_SIN_DUAL:       localDefaultTableModel = this.creadorTablemodelsBasicos.getPronombresPersonalesPorCaso(false);      this.utilidadesTM.columnasAInterfaz(localDefaultTableModel, new String[] { "NOMINATIVO", "ACUSATIVO", "GENITIVO", "DATIVO" });      break;    case PRONOMBRES_RELATIVOS_POR_GENERO_1:       localDefaultTableModel = this.creadorTablemodelsBasicos.getPronombresRelativos("2213895001115bd9d355912800022138");      this.utilidadesTM.columnasAInterfaz(localDefaultTableModel, new String[] { "MASCULINO", "FEMENINO", "NEUTRO" });      break;    case PRONOMBRES_RELATIVOS_POR_GENERO_2:       localDefaultTableModel = this.creadorTablemodelsBasicos.getPronombresRelativos("b695e4e1115bd9dcf76128000b695e4e");      this.utilidadesTM.columnasAInterfaz(localDefaultTableModel, new String[] { "MASCULINO", "FEMENINO", "NEUTRO" });      break;    case PRONOMBRES_RELATIVOS_POR_GENERO_3:       localDefaultTableModel = this.creadorTablemodelsBasicos.getPronombresRelativos("5b62bf91111a838b550d1280005b62bf");      this.utilidadesTM.columnasAInterfaz(localDefaultTableModel, new String[] { "MASCULINO", "FEMENINO", "NEUTRO" });      break;    case PRONOMBRES_INTERROGATIVOS_POR_GENERO:       localDefaultTableModel = this.creadorTablemodelsBasicos.getPronombresInterrogativos("154a3f921115ece6a2ac128000154a3f");      this.utilidadesTM.columnasAInterfaz(localDefaultTableModel, new String[] { "MASC_FEM", "NEUTRO" });      break;    case PRONOMBRES_REFLEXIVOS_POR_GENERO:       localDefaultTableModel = this.creadorTablemodelsBasicos.getPronombresReflexivos("256406591115d5461a4a128000256406");      this.utilidadesTM.columnasAInterfaz(localDefaultTableModel, new String[] { "MASCULINO", "FEMENINO", "NEUTRO" });      break;    case CONJUNCIONES_POR_TIPO:       localDefaultTableModel = this.creadorTablemodelsBasicos.getConjuncionesPorTipo();      this.utilidadesTM.columnasAInterfaz(localDefaultTableModel, new String[] { "FORMA" });      break;    case CONJUNCIONES_ALFABETICO:       localDefaultTableModel = this.creadorTablemodelsBasicos.getConjuncionesAlfabeticamente();      this.utilidadesTM.columnasAInterfaz(localDefaultTableModel, new String[] { "FORMA" });      break;    case PREPOSICIONES_ALFABETICO:       localDefaultTableModel = this.creadorTablemodelsBasicos.getPreposicionesAlfabeticamente();      this.utilidadesTM.columnasAInterfaz(localDefaultTableModel, new String[] { "FORMA" });      break;    case PREPOSICIONES_POR_CASO:       localDefaultTableModel = this.creadorTablemodelsBasicos.getPreposicionesPorCaso();      this.utilidadesTM.columnasAInterfaz(localDefaultTableModel, new String[] { "FORMA" });      break;    case INTERJECCIONES_ALFABETICO:       localDefaultTableModel = this.creadorTablemodelsBasicos.getInterjeccionesAlfabeticamente();      this.utilidadesTM.columnasAInterfaz(localDefaultTableModel, new String[] { "FORMA" });      break;    case PRONOMBRES_INDEFINIDOS_POR_GENERO:       localDefaultTableModel = this.creadorTablemodelsBasicos.getPronombresIndefinidos("2796b544e111a7e4652c81280002796b");      this.utilidadesTM.columnasAInterfaz(localDefaultTableModel, new String[] { "MASC_FEM", "NEUTRO" });      break;    default:       throw new RuntimeException("tipo de reporte no implementado=" + reporte);    }    this.utilidadesTM.enumsAStrings(localDefaultTableModel);    this.utilidadesTM.clavesFlexionAString(localDefaultTableModel);    return localDefaultTableModel;  }    public void setUtilidadesTM(UtilidadesTM paramC) {	this.utilidadesTM = paramC;    }    public void setCreadorTableModelsBasicos(CreadorTableModelsBasicos paramO) {	this.creadorTablemodelsBasicos = paramO;    }}