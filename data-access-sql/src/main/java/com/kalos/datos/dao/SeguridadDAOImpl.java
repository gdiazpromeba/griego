package com.kalos.datos.dao;import java.sql.ResultSet;import java.sql.SQLException;import java.util.List;import javax.sql.DataSource;import org.apache.log4j.Logger;import org.springframework.jdbc.core.SqlParameter;import org.springframework.jdbc.core.support.JdbcDaoSupport;import org.springframework.jdbc.object.MappingSqlQuery;import org.springframework.jdbc.object.SqlUpdate;// Referenced classes of package kalos.E.C://            apublic class SeguridadDAOImpl extends JdbcDaoSupport implements SeguridadDAO {    class Insercion extends SqlUpdate {	public Insercion(DataSource datasource) {	    super(datasource, INSERT_SQL);	    declareParameter(new SqlParameter(1));	    declareParameter(new SqlParameter(1));	}    }    class Seleccion extends MappingSqlQuery {	protected Object mapRow(ResultSet resultset, int i) throws SQLException {	    return resultset.getString("NOMBRE");	}	public Seleccion(DataSource datasource) {	    super(datasource, SELECT_SQL);	}    }    private static String SELECT_SQL;    private static String INSERT_SQL;    private static Logger logger = Logger.getLogger(SeguridadDAOImpl.class.getName());    private Seleccion seleccion;    private Insercion insercion;    private void puebla() {	StringBuffer stringbuffer = new StringBuffer(200);	stringbuffer.append("SELECT   \n");	stringbuffer.append("  NOMBRE   \n");	stringbuffer.append("FROM        \n");	stringbuffer.append("  SEGURIDAD       \n");	SELECT_SQL = stringbuffer.toString();	stringbuffer = new StringBuffer(200);	stringbuffer.append("INSERT SEGURIDAD(   \n");	stringbuffer.append("  NOMBRE,   \n");	stringbuffer.append("  CLAVE   \n");	stringbuffer.append(" ) VALUES (    \n");	stringbuffer.append("  ?,?  \n");	stringbuffer.append(")     \n");	INSERT_SQL = stringbuffer.toString();    }    public String getNombre() {	List list = seleccion.execute(new Object[0]);	if (list.size() > 0) {	    return (String) list.get(0);	} else {	    return null;	}    }    public void inserta(String s1, String s2) {	try {	    logger.debug("en DAO insertando ...");	    int i = insercion.update(new Object[] { s1, s2 });	    logger.debug((new StringBuilder()).append("filas afectadas=").append(i).toString());	} catch (Exception exception) {	    logger.error("error al insertar nombre-clave", exception);	}    }    public void initDao() throws Exception {	super.initDao();	puebla();	seleccion = new Seleccion(getDataSource());	insercion = new Insercion(getDataSource());    }    static String C() {	return SELECT_SQL;    }    static String A() {	return INSERT_SQL;    }}