package com.kalos.datos.dao;import java.sql.ResultSet;import java.sql.SQLException;import java.util.List;import javax.sql.DataSource;import com.kalos.beans.DesinVerbo;import com.kalos.enumeraciones.Acento;import com.kalos.enumeraciones.FuerteDebil;import com.kalos.enumeraciones.Modo;import com.kalos.enumeraciones.Persona;import com.kalos.enumeraciones.Tiempo;import com.kalos.enumeraciones.Voz;import org.springframework.jdbc.core.support.JdbcDaoSupport;// Referenced classes of package kalos.E.C://            Pimport org.springframework.jdbc.object.MappingSqlQuery;@SuppressWarnings("unchecked")public class DesinVerbosDAOImpl extends JdbcDaoSupport implements DesinVerbosDAO {	@Override	public List<DesinVerbo> seleccionaTodo() {		return null;	}	public void inserta(DesinVerbo m1) {		throw new RuntimeException("not implemented yet");	}	class SelOrdenNotNull extends SeleccionAbstracta {		public SelOrdenNotNull(DataSource datasource) {			super(datasource, SEL_ORDEN_NOT_NULL_SQL);		}	}	class Seleccion extends SeleccionAbstracta {		public Seleccion(DataSource datasource) {			super(datasource, SEL_SQL);		}	}	abstract class SeleccionAbstracta extends MappingSqlQuery {		protected Object mapRow(ResultSet resultset, int i) throws SQLException {			DesinVerbo bean = new DesinVerbo();			bean.setJuego(resultset.getInt("JUEGO"));			bean.setVoz(Voz.getEnum(resultset.getInt("VOZ")));			bean.setModo(Modo.getEnum(resultset.getInt("MODO")));			bean.setTiempo(Tiempo.getEnum(resultset.getInt("TIEMPO")));			bean.setFuerte(FuerteDebil.getEnum(resultset.getInt("FUERTE")));			bean.setPersona(Persona.getEnum(resultset.getInt("PERSONA")));			bean.setDesinencia(resultset.getString("DESINENCIA"));			bean.setSilaba(resultset.getInt("SILABA"));			bean.setSubindice(resultset.getInt("SUBINDICE"));			bean.setAcento(Acento.getEnum(resultset.getInt("ACENTO")));			bean.setOrden(Integer.valueOf(resultset.getInt("ORDEN")));			bean.setOrdenPorDefecto(Integer.valueOf(resultset.getInt("ORDEN_POR_DEFECTO")));			return bean;		}		public SeleccionAbstracta(DataSource ds, String sql) {			super(ds, sql);		}	}	private void puebla() {		StringBuffer stringbuffer = new StringBuffer(200);		stringbuffer.append("SELECT   \n");		stringbuffer.append("  DEV.JUEGO,   \n");		stringbuffer.append("  DEV.VOZ,   \n");		stringbuffer.append("  DEV.MODO,   \n");		stringbuffer.append("  DEV.TIEMPO,   \n");		stringbuffer.append("  DEV.FUERTE,   \n");		stringbuffer.append("  DEV.PERSONA,   \n");		stringbuffer.append("  DEV.DESINENCIA,   \n");		stringbuffer.append("  DEV.SILABA,   \n");		stringbuffer.append("  DEV.SUBINDICE,   \n");		stringbuffer.append("  DEV.ACENTO,   \n");		stringbuffer.append("  DEV.ORDEN,   \n");		stringbuffer.append("  DEV.ORDEN_POR_DEFECTO   \n");		stringbuffer.append("FROM        \n");		stringbuffer.append("  DESIN_VERBOS DEV       \n");		stringbuffer.append("WHERE  \n");		stringbuffer.append("  DEV.ORDEN IS NOT NULL  ");		SEL_ORDEN_NOT_NULL_SQL = stringbuffer.toString();		stringbuffer = new StringBuffer(200);		stringbuffer.append("SELECT   \n");		stringbuffer.append("  DEV.JUEGO,   \n");		stringbuffer.append("  DEV.VOZ,   \n");		stringbuffer.append("  DEV.MODO,   \n");		stringbuffer.append("  DEV.TIEMPO,   \n");		stringbuffer.append("  DEV.FUERTE,   \n");		stringbuffer.append("  DEV.PERSONA,   \n");		stringbuffer.append("  DEV.DESINENCIA,   \n");		stringbuffer.append("  DEV.SILABA,   \n");		stringbuffer.append("  DEV.SUBINDICE,   \n");		stringbuffer.append("  DEV.ACENTO,   \n");		stringbuffer.append("  DEV.ORDEN,   \n");		stringbuffer.append("  DEV.ORDEN_POR_DEFECTO   \n");		stringbuffer.append("FROM        \n");		stringbuffer.append("  DESIN_VERBOS DEV       \n");		SEL_SQL = stringbuffer.toString();	}	/* (non-Javadoc)     * @see com.kalos.datos.dao.DesinVerbosDAO#seleccionaRestringidas()     */	@Override	public List<DesinVerbo> seleccionaRestringidas() {		List<DesinVerbo> list = seleccion.execute();		return list;	}	/* (non-Javadoc)     * @see com.kalos.datos.dao.DesinVerbosDAO#seleccionaTodasOrdenNoNulo()     */	@Override	public List<DesinVerbo> seleccionaTodasOrdenNoNulo() {		List<DesinVerbo> list = selOrdenNotNull.execute();		return list;	}	public void initDao() throws Exception {		super.initDao();		puebla();		seleccion = new Seleccion(getDataSource());		selOrdenNotNull = new SelOrdenNotNull(getDataSource());	}	private static String SEL_ORDEN_NOT_NULL_SQL;	private static String SEL_SQL;	private Seleccion seleccion;	private SelOrdenNotNull selOrdenNotNull;}