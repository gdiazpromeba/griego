// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.// Jad home page: http://www.kpdus.com/jad.html// Decompiler options: packimports(3) package com.kalos.iu;import java.awt.Desktop;import java.awt.event.ActionEvent;import java.awt.event.ActionListener;import java.awt.event.ItemEvent;import java.awt.event.ItemListener;import java.net.URI;import javax.swing.JCheckBoxMenuItem;import javax.swing.JFrame;import javax.swing.JMenu;import javax.swing.JMenuBar;import javax.swing.JMenuItem;import javax.swing.JOptionPane;import javax.swing.JSeparator;import javax.swing.SwingUtilities;import org.apache.log4j.Logger;import com.kalos.iu.registro.VentanaRegistro;import com.kalos.recursos.Configuracion;import com.kalos.recursos.Recursos;import com.kalos.visual.controles.ventanas.DialogErrores;public class Menues {	public Menues() {		logger = Logger.getLogger(getClass().getName());		mnuArchivo = new JMenu(Recursos.getCadena("archivo"));		mnuImprimible = new JMenuItem(Recursos.getCadena("crea_version_imprimible"));		mnuSalir = new JMenuItem(Recursos.getCadena("salir"));		mnuMacrones = new JCheckBoxMenuItem(Recursos.getCadena("alternar_makrones"));		mnuAyuda = new JMenu(Recursos.getCadena("ayuda"));		mnuContenido = new JMenuItem(Recursos.getCadena("contenido"));		mnuRegistro = new JMenuItem(Recursos.getCadena("registro"));		mnuAcercaDe = new JMenuItem(Recursos.getCadena("acerca_de"));		mnuBar = new JMenuBar();	}	public void inicializa(JFrame jframe) {		frame = jframe;		B();		jframe.setJMenuBar(mnuBar);		A();	}	private void B() {		mnuBar.add(mnuArchivo);		mnuArchivo.add(new JSeparator());		mnuArchivo.add(mnuSalir);		mnuBar.add(mnuAyuda);		mnuAyuda.add(mnuContenido);		mnuAyuda.add(new JSeparator());		mnuAyuda.add(mnuRegistro);		mnuAyuda.add(new JSeparator());		mnuAyuda.add(mnuAcercaDe);	}	private void A() {		mnuSalir.addActionListener(new ActionListener() {			public void actionPerformed(ActionEvent actionevent) {				Configuracion.reescribeIni();				System.exit(0);			}		});		mnuMacrones.addItemListener(new ItemListener() {			public void itemStateChanged(ItemEvent itemevent) {				boolean flag = itemevent.getStateChange() == 1;				Configuracion.setMuestraMakrones(flag);			}		});		mnuAcercaDe.addActionListener(new ActionListener() {			public void actionPerformed(ActionEvent actionevent) {				DialogErrores.muestraVentanaAcercaDe(frame.getContentPane());			}		});		mnuContenido.addActionListener(new ActionListener() {			public void actionPerformed(ActionEvent actionevent) {				try {					Desktop.getDesktop().browse(new URI(Recursos.getUrlHelp()));				} catch (Exception exception) {					logger.error(exception);				}			}		});		mnuRegistro.addActionListener(new ActionListener() {			public void actionPerformed(ActionEvent actionevent) {				JFrame jframe = (JFrame) SwingUtilities.getWindowAncestor(frame);				String s = Configuracion.getNombre();				if (s == null) {					VentanaRegistro a = Comienzo.getVentanaRegistro();					a.setLocationRelativeTo(jframe);					a.pack();					a.setModal(true);					a.setVisible(true);				} else {					StringBuffer stringbuffer = new StringBuffer(100);					stringbuffer.append(Recursos.getCadena("due√±o_registrado"));					stringbuffer.append(" : ");					stringbuffer.append(s);					JOptionPane.showMessageDialog(jframe, stringbuffer.toString(),							Recursos.getCadena("registro"), 1);				}			}		});	}	Logger logger;	JMenu mnuArchivo;	JMenuItem mnuImprimible;	JMenuItem mnuSalir;	JCheckBoxMenuItem mnuMacrones;	JMenu mnuAyuda;	JMenuItem mnuContenido;	JMenuItem mnuRegistro;	JMenuItem mnuAcercaDe;	JFrame frame;	JMenuBar mnuBar;}